{
  "name": "torus-be",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "prisma": {
    "seed": "ts-node src/scripts/seed/seed.script.ts"
  },
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "prisma generate && nest build",
    "format:check": "prettier \"src/**/*.ts\" \"test/**/*.ts\" --check",
    "format:write": "prettier \"src/**/*.ts\" \"test/**/*.ts\" --write",
    "start": "prisma generate && nest start --env-file .env",
    "start:repl": "prisma generate && nest start --env-file .env --entryFile repl --watch",
    "start:dev": "prisma generate && nest start --env-file .env --watch --watch-ignore \"uploads/**/*\" --watch-ignore \"prisma/*.db\" --watch-ignore \"*.db\" --verbose",
    "start:debug": "prisma generate && nest start --env-file .env --debug --watch",
    "start:prod": "node -r dotenv/config dist/src/main dotenv_config_path=.env",
    "seed": "prisma generate && ts-node src/scripts/seed/seed.script.ts",
    "migrate": "prisma db push --skip-generate",
    "start:migrate:prod": "prisma db push --skip-generate && npm run start:prod",
    "db:fresh": "prisma db push --skip-generate --force-reset && npm run seed",
    "db:reset-script": "ts-node src/scripts/db-reset.ts",
    "start:fresh:dev": "npm run db:fresh && npm run start:dev",
    "start:fresh:prod": "npm run db:fresh && npm run start:prod",
    "koyeb:deploy:run": "prisma migrate deploy && npm run build && npm run start:prod",
    "lint:check": "eslint \"{src,apps,libs,test}/**/*.ts\"",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:ci": "jest --collectCoverage --ci --reporters=default --reporters=jest-junit --watchAll=false",
    "docker:up": "docker compose up",
    "docker:up-rebuild": "docker compose down; docker compose up --renew-anon-volumes --build --force-recreate be",
    "docker:down": "docker compose down",
    "restart": "touch ./tmp/restart.txt",
    "prisma:generate": "prisma generate",
    "prisma:migrations:generate": "prisma migrate dev --create-only --name",
    "prisma:migrations:run": "prisma migrate dev",
    "prisma:studio": "prisma studio",
    "docs:serve": "npx @compodoc/compodoc -p tsconfig.json -s",
    "nest:upgrade": "npx npm-check-updates '/@nestjs.*/' -u && npm install && npm test && npm run docker:up-rebuild",
    "adr:new": "adr new $npm_config_title",
    "auth:generate": "npx @better-auth/cli generate --config ./src/shared/auth/utils/cli-auth-client.ts",
    "db:reset": "prisma migrate reset --force"
  },
  "dependencies": {
    "@apollo/server": "^4.9.4",
    "@applifting-io/nestjs-dataloader": "^1.1.5",
    "@applifting-io/nestjs-decorated-config": "^1.0.7",
    "@casl/ability": "^6.5.0",
    "@faker-js/faker": "^8.4.1",
    "@graphql-tools/mock": "^9.0.4",
    "@graphql-tools/schema": "^10.0.4",
    "@nestjs/apollo": "^12.1.0",
    "@nestjs/axios": "^3.0.2",
    "@nestjs/cache-manager": "^2.2.1",
    "@nestjs/common": "^10.3.3",
    "@nestjs/core": "^10.3.3",
    "@nestjs/graphql": "^12.1.1",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "^2.0.5",
    "@nestjs/platform-express": "^10.3.3",
    "@nestjs/schedule": "^4.0.1",
    "@nestjs/serve-static": "4.0.2",
    "@nestjs/swagger": "^7.3.0",
    "@nestjs/terminus": "^10.2.3",
    "@nestjs/throttler": "^6.4.0",
    "@prisma/client": "^6.3.0",
    "@sentry/cli": "^2.25.0",
    "@sentry/node": "^7.93.0",
    "@supabase/supabase-js": "^2.48.0",
    "jsonwebtoken": "^9.0.2",
    "apollo-server-express": "^3.11.1",
    "apollo-server-plugin-base": "^3.7.2",
    "axios": "^1.9.0",
    "cache-manager": "^5.2.4",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cookie": "^0.7.0",
    "cookie-parser": "^1.4.6",
    "dataloader": "^2.2.2",
    "dotenv": "^17.2.3",
    "graphql": "^16.9.0",
    "graphql-subscriptions": "^2.0.0",
    "graphql-upload": "^17.0.0",
    "graphql-ws": "^5.14.2",
    "handlebars": "^4.7.8",
    "jest-mock-extended": "^3.0.5",
    "joi": "^17.12.2",
    "minio": "^8.0.1",
    "mjml": "^4.15.3",
    "multer": "^1.4.5-lts.2",
    "nestjs-cls": "^5.2.0",
    "nestjs-graphql-connection": "^1.0.3",
    "nodemailer": "^6.9.16",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.8.1",
    "sendmail": "^1.6.1",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@compodoc/compodoc": "^1.1.21",
    "@ianvs/prettier-plugin-sort-imports": "^4.1.1",
    "@nestjs/cli": "^10.3.2",
    "@nestjs/schematics": "^10.1.1",
    "@nestjs/testing": "^10.3.3",
    "@types/cookie": "^0.6.0",
    "@types/cookie-parser": "^1.4.4",
    "@types/eslint": "^8.44.5",
    "@types/express": "^4.17.21",
    "@types/graphql-upload": "^17.0.0",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/mjml": "^4.7.4",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.8.5",
    "@types/nodemailer": "^6.4.17",
    "@types/pg": "^8.11.11",
    "@types/sendmail": "^1.4.7",
    "@types/supertest": "^2.0.14",
    "@types/uuid": "^9.0.8",
    "@types/ws": "^8.5.7",
    "@typescript-eslint/eslint-plugin": "^6.7.5",
    "@typescript-eslint/parser": "^6.7.5",
    "cross-env": "^7.0.3",
    "docker-compose": "^1.1.0",
    "eslint": "^8.51.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-prettier": "^5.0.1",
    "fast-check": "^3.13.2",
    "is-ci": "^3.0.1",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "pg": "^8.13.1",
    "pg-connection-string": "^2.7.0",
    "prettier": "^3.5.3",
    "prisma": "^6.3.0",
    "prisma-json-types-generator": "^3.2.2",
    "run-script-webpack-plugin": "^0.2.0",
    "sqlite3": "^5.1.7",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.5.0",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "webpack": "^5.93.0",
    "webpack-node-externals": "^3.0.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/$1"
    },
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
